@startuml

class GameController{
    Enum MoveDirection
    ==
    + {static} windowWidth: int
    + {static} windowHeight: int
    + {static} gameOver: bool
    + {static} gamePause: bool
    - _newDir: MoveDirection = RIGHT
    - _lastDir: MoveDirection
    - _snake: Snake
    - _food: Food
    - _t: Stopwatch
	__
    + GameController()
    - GameLoop(): void
    - CheckKeyPress(): void
}

class Snake{
    - _snakeColor: ConsoleColor = Yellow
    - _snakeParts: List<SnakePart>
    - _hasEaten: bool
    - _tail: SnakePart
    - _head: SnakePart

    + Snake(startX: int = 10, startY: int = 10, length: int = 4)
    + Move(direction: MoveDirection): void
    + Collide(): bool
    + Eat(): void
    + DrawSnake(): void
    + AddPart(x: int, y: int, marker: Marker): void
    + IsFoodInSnake(food: Food): bool
}

class Food{
    - {static} _rand: Random

    + Food()
    + Food(x: int, y: int)
    + Draw(): void
    - {static} RandomInt(isWidth: bool): Int
}

class SnakePart{
    + SnakePart(x: int, y: int, marker: Marker)
    + SnakePart(sp: SnakePart)
    + SnakePart(sp: SnakePart, marker: Marker)
}

class Item {
    + Coord: Coordinate
    + Icon: char

    + Item(x: int, y: int, marker: Marker)
    + Item(x: int, y: int, icon: char)
    + {static} operator ==(): bool
    + {static} operator !=(): bool
}

class Coordinate{
    + X: int
    + Y: int

    + Coordinate()
    + Coordinate(int x, int y)
    + {static} operator ==(): bool
    + {static} operator !=(): bool
}

class Output{
	+ {static} CursorVisible(input: bool): void
	+ {static} Title(title: string): void
	+ {static} Draw(x: int, y: int, icon: char): void
	+ {static} SetColor(color: ConsoleColor): void
}

class Markers{
    + {static} HEAD: char
    + {static} BODY: char
    + {static} TAIL: char
    + {static} FOOD: char
    + {static} GetMarker(marker: Marker): char
}

Enum Marker{
    HEAD
    BODY
    TAIL
    FOOD
}


Item "0..*" --* "1" Coordinate
SnakePart --|> Item	




Snake --* SnakePart


GameController --* Snake
GameController --* Food


Food --|> Item


@enduml